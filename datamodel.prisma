type User {
  id: ID! @id
  avatar: String
  email: String! @unique
  userName: String! @unique
  firstName: String! @default(value: "")
  lastName: String! @default(value: "")
  bio: String! @default(value: "")
  followings: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsByUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesByUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommetsByUser", onDelete: CASCADE)
  chatRooms: [ChatRoom!]!
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User! @relation(name: "PostsByUser")
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  likes: [Like!]!  @relation(name: "LikesOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User! @relation(name: "LikesByUser")
  post: Post! @relation(name: "LikesOfPost")
}

type Comment {
  id: ID! @id
  text: String!
  user: User! @relation(name: "CommetsByUser")
  post: Post! @relation(name: "CommentsOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post! @relation(name: "FilesOfPost")
}

type ChatRoom {
  id: ID! @id
  participants: [User!]! 
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  chatRoom: ChatRoom!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}